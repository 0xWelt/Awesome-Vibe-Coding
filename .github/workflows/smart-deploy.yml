name: Smart Build and Deploy Website

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should-build: ${{ steps.check.outputs.build-needed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史记录以查找上一次部署

      - name: Check if build is needed
        id: check
        run: |
          # 定义需要监控的文件模式
          PATTERNS="README.md|app/|components/|scripts/|package.json|package-lock.json|next.config.js|tsconfig.json|tailwind.config.js|.github/workflows/"

          # 获取上一次成功部署的commit SHA
          LAST_DEPLOYED_SHA=$(git log --oneline --grep="Deploy to GitHub Pages" -n 1 --format="%H" || echo "")

          if [ -z "$LAST_DEPLOYED_SHA" ]; then
            echo "首次部署或找不到部署记录，执行构建"
            BUILD_NEEDED=true
          else
            echo "上一次部署SHA: $LAST_DEPLOYED_SHA"
            
            # 获取变更的文件列表
            CHANGED_FILES=$(git diff --name-only $LAST_DEPLOYED_SHA HEAD)
            echo "变更的文件:"
            echo "$CHANGED_FILES"
            
            # 检查是否有匹配的文件
            if echo "$CHANGED_FILES" | grep -E "$PATTERNS"; then
              BUILD_NEEDED=true
              echo "检测到相关文件变化，需要构建"
            else
              BUILD_NEEDED=false
              echo "没有检测到相关文件变化，跳过构建"
            fi
          fi

          echo "build-needed=$BUILD_NEEDED" >> $GITHUB_OUTPUT
          echo "Build needed: $BUILD_NEEDED"

  build-and-deploy:
    needs: check-changes
    if: needs.check-changes.outputs.should-build == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Parse README and generate data
        run: npm run parse-readme

      - name: Build website
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
